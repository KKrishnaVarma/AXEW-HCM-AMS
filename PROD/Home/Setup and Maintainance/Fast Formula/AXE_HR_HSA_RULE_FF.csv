FORMULA_ID,FORMULA_TEXT
300000036915665,"
/* ******************************************************************
 * Formula Name     : AXE_HR_HSA_RULE_FF
 * Rice ID          : HCM_I030
 * Formula Type     : Extract Rule
 * Description      : Calculation for HSA Salary Rule 
 *
 * Change History
 * --------------
 *
 * Name 	                               Ver      Date         Description
 *-----------------------------------     ------   ------------ ------------
   Abu Thahir                             1.0	   2019-Jun-11  Initial Draft
   Srinivas Thurakapalli                  1.1      2020-May-01   To include Active status of EIT values

***************************************************************************** */


DEFAULT FOR DATA_ELEMENTS IS EMPTY_TEXT_TEXT
DEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_EFFECTIVE_START_DATE IS '1903/01/01 00:00:00' (date)
DEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_PEI_INFORMATION_NUMBER1 IS 0
DEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_PERSON_ID IS 0
DEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_INFORMATION_TYPE IS 'NO DATA'
DEFAULT_DATA_VALUE FOR CMP_ASSIGNMENT_RGE_SALARY_ID IS 0
DEFAULT_DATA_VALUE FOR CMP_ASSIGNMENT_RGE_SALARY_COMPONENT_CODE IS 'X'
DEFAULT_DATA_VALUE FOR CMP_ASSIGNMENT_RGE_SALARY_CHANGE_AMOUNT IS 0
DEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_PEI_INFORMATION4 IS 'X'
DEFAULT_DATA_VALUE FOR CMP_ASSIGNMENT_SALARY_ID IS 0
DEFAULT FOR CMP_ASG_SALARY_ID IS 0
DEFAULT_DATA_VALUE FOR CMP_ASSIGNMENT_SALARY_COMPONENT_CODE IS 'NODATA'
DEFAULT_DATA_VALUE FOR CMP_ASSIGNMENT_SALARY_CHANGE_AMOUNT IS 0
DEFAULT FOR CMP_ASSIGNMENT_SALARY_AMOUNT IS 0
DEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_FROM IS '1902/01/01 00:00:00' (date)
DEFAULT FOR CMP_ASSIGNMENT_SALARY_BASIS_CODE IS 'X'


INPUTS ARE DATA_ELEMENTS (TEXT_TEXT)

TRACE_FLAG = 'N'

RULE_VALUE = ' '
PRIOR_YEAR = 0
N_PRCS_RUN_YEAR = 0
PRCS_RUN_YEAR = 'NO DATA'
BASE_DATE_LAST_YR = 'NO DATA'
BASE_DATE_CURR_YR = 'NO DATA'
LATEST_HIRE_DATE = 'NO DATA'
E_LATEST_HIRE_DATE = ' '
E_HIRE_DATE = '1902/01/01'
HSA_ABBR_VALUE = 0
HSA_ABBR_EFFDT = '1903/01/01 00:00:00' (date)
CUTOFF_TEST_DT = '1902/01/01 00:00:00' (date)
PRCS_RUN_DATE = '1901/01/01 00:00:00' (date)
CALENDAR_HSA_DT = '1904/01/01 00:00:00' (date)
L_ASSGN_START_DT = '1904/01/01 00:00:00' (date)
L_LATEST_HIRE_DT = '1905/01/01 00:00:00' (date)
L_ORIG_HIRE_DT = '1905/01/01 00:00:00' (date)

Formatted_Calculated_Salary = '0.00'
Formatted_HSA_ABBR_VALUE = '0.00'
Formatted_L_SAL_AMOUNT = '0'

PRCS_RUN_DATE =  get_context(effective_date, '0001/01/01 00:00:00'(date))
PRCS_RUN_YEAR = TO_CHAR(PRCS_RUN_DATE,'YYYY')
N_PRCS_RUN_YEAR = TO_NUMBER(PRCS_RUN_YEAR)
PRIOR_YEAR = (N_PRCS_RUN_YEAR-1)
BASE_DATE_LAST_YR = (TO_CHAR(PRIOR_YEAR) || '/05/01')
BASE_DATE_CURR_YR = (PRCS_RUN_YEAR || '/05/01')
CUTOFF_TEST_DT = TO_DATE(BASE_DATE_CURR_YR,'YYYY/MM/DD')

E_PERSON_ID = DATA_ELEMENTS['Person_ID']
L_PERSON_ID = TO_NUMBER(E_PERSON_ID)
IF (DATA_ELEMENTS.EXISTS('Rehire_Date')) THEN (E_LATEST_HIRE_DATE = DATA_ELEMENTS['Rehire_Date']
L_LATEST_HIRE_DT =  TO_DATE(SUBSTR(E_LATEST_HIRE_DATE,1,10),'YYYY/MM/DD')
)

E_ASSIGNMENT_ID = DATA_ELEMENTS['Assignment_ID']
L_ASSIGNMENT_ID = TO_NUMBER(E_ASSIGNMENT_ID)
E_ASSIGNMENT_START_DT = DATA_ELEMENTS['Assignment_Start_Date']
L_ASSGN_START_DT =  TO_DATE(SUBSTR(E_ASSIGNMENT_START_DT,1,10),'YYYY/MM/DD')

L_COUNTER = PER_HIST_ASG_ASSIGNMENT_ID.FIRST(-1) 

IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE(' AXE_HR_HSA_RULE_FF - Starts '))
IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE('PERSON_ID is '|| E_PERSON_ID ))
IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE('PRCS_RUN_DATE is '|| TO_CHAR(PRCS_RUN_DATE) || ' , ' || ' CUTOFF_TEST_DT is '|| TO_CHAR(CUTOFF_TEST_DT) || ' , ' || ' L_LATEST_HIRE_DT is '|| TO_CHAR(L_LATEST_HIRE_DT)||' , ' || ' L_ORIG_HIRE_DT is '|| TO_CHAR(L_ORIG_HIRE_DT)||'L_COUNTER'||to_char(L_COUNTER) ))

IF (E_LATEST_HIRE_DATE =' ') THEN
(
IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE('E_LATEST_HIRE_DATE is '|| E_LATEST_HIRE_DATE ))

E_HIRE_DATE=GET_VALUE_SET('AXE_ORIGINAL_HIRE_DT_MS_VS','|=PERSON_ID='''||E_PERSON_ID||'''')
L_ORIG_HIRE_DT =  TO_DATE(SUBSTR(E_HIRE_DATE,1,10),'YYYY-MM-DD')
IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE('L_ORIG_HIRE_DT is '|| TO_CHAR(L_ORIG_HIRE_DT) ))

L_LATEST_HIRE_DT=L_ORIG_HIRE_DT
IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE('L_LATEST_HIRE_DT is '|| TO_CHAR(L_LATEST_HIRE_DT) ))

)


IF (DATA_ELEMENTS.EXISTS('Person_ID')) THEN
(

IF (CUTOFF_TEST_DT > PRCS_RUN_DATE) THEN
	(
	CALENDAR_HSA_DT = TO_DATE(BASE_DATE_LAST_YR ,'YYYY/MM/DD')
	)
ELSE 
	(
	CALENDAR_HSA_DT = CUTOFF_TEST_DT
	)


IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE('CALENDAR_HSA_DT is '|| TO_CHAR(CALENDAR_HSA_DT) ))
IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE('PERSON_ID is '|| E_PERSON_ID ))



	IF (L_LATEST_HIRE_DT <= CALENDAR_HSA_DT) THEN
		(   
		
		
		    IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE('Inside While Step 2-A' ))
					
			VS_EIT_RETURNS = GET_VALUE_SET('AXE_HR_PER_EIT_VS','|=PERSON_ID='''||E_PERSON_ID||''''||'|CALENDAR_HSA_DT='''||TO_CHAR(CALENDAR_HSA_DT,'YYYY-MM-DD')||'''') 
			IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE(' VS_EIT_RETURNS: '|| VS_EIT_RETURNS ))	

				IF VS_EIT_RETURNS <> '0' THEN
				(		
					HSA_ABBR_EFFDT = TO_DATE(SUBSTR(VS_EIT_RETURNS,1,10),'YYYY-MM-DD')
					HSA_ABBR_VALUE  = TO_NUMBER(SUBSTR(VS_EIT_RETURNS,11,40))	
				)
				IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE(' HSA_ABBR_EFFDT: '|| TO_CHAR(HSA_ABBR_EFFDT )||'HSA_ABBR_VALUE'||TO_CHAR(HSA_ABBR_VALUE)))	

			
			
		)
	ELSE
		(
		    IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE('Inside While Step 3-A'))
			
			VS_EIT_RETURNS = GET_VALUE_SET('AXE_HR_PER_HIRE_EIT_VS','|=PERSON_ID='''||E_PERSON_ID||''''||'|CALENDAR_HSA_DT='''||TO_CHAR(L_LATEST_HIRE_DT,'YYYY-MM-DD')||'''') 
			IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE(' VS_EIT_RETURNS: '|| VS_EIT_RETURNS ))	

				IF VS_EIT_RETURNS <> '0' THEN
				(		
					HSA_ABBR_EFFDT = TO_DATE(SUBSTR(VS_EIT_RETURNS,1,10),'YYYY-MM-DD')
					HSA_ABBR_VALUE  = TO_NUMBER(SUBSTR(VS_EIT_RETURNS,11,40))	
				)
				IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE(' HSA_ABBR_EFFDT: '|| TO_CHAR(HSA_ABBR_EFFDT )||'HSA_ABBR_VALUE'||TO_CHAR(HSA_ABBR_VALUE)))	

			
			
		)
	
	HSA_ABBR_VALUE = Round(HSA_ABBR_VALUE,2)
/* --------- Fetch values from ABBR - Ends ----------*/

/* --------- Fetch values from Salary Table - Starts ----------*/

IF HSA_ABBR_VALUE = 0 THEN
(

IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE(' No HSA Defined '))

L_SAL_AMOUNT = 0
L_SAL_FROM_DATE = '1902/01/01 00:00:00' (date)
DATE_ASSIGNED = '1904/01/01 00:00:00' (date)
DATE_ASSIGNED_T = '1905/01/01 00:00:00' (date)
L_SAL_BASIS_CODE = 'X'


	IF (L_LATEST_HIRE_DT <= CALENDAR_HSA_DT) THEN
	( 
	DATE_ASSIGNED =  CALENDAR_HSA_DT 
	)
	ELSE
	(
	DATE_ASSIGNED =  L_LATEST_HIRE_DT
	) 

		IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE(' DATE_ASSIGNED = ' || TO_CHAR(DATE_ASSIGNED)))
		
		CHANGE_CONTEXTS(EFFECTIVE_DATE = DATE_ASSIGNED, HR_ASSIGNMENT_ID = L_ASSIGNMENT_ID)
		(
			L_SAL_FROM_DATE  = CMP_ASSIGNMENT_SALARY_DATE_FROM
			L_SAL_AMOUNT  = CMP_ASSIGNMENT_SALARY_AMOUNT 
			L_SAL_BASIS_CODE  = CMP_ASSIGNMENT_SALARY_BASIS_CODE
		)
		
		IF TO_CHAR(TRUNC(L_SAL_FROM_DATE),'YYYY/MM/DD') = '1902/01/01' THEN
			(
			VS_RETURNS = GET_VALUE_SET('AXE_HR_MS_SALARY_START_DT_VS','|=ASSIGNMENT_ID='''||E_ASSIGNMENT_ID||''''||'|CALENDAR_HSA_DT='''||TO_CHAR(DATE_ASSIGNED,'YYYY-MM-DD')||'''') 
			IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE(' VS_RETURNS: '|| VS_RETURNS ))	

				IF VS_RETURNS <> '0' THEN
				(		
					L_SAL_FROM_DATE = TO_DATE(SUBSTR(VS_RETURNS,1,10),'YYYY-MM-DD')
					L_SAL_BASIS_CODE  = SUBSTR(VS_RETURNS,11,6)
					L_SAL_AMOUNT  = TO_NUMBER(SUBSTR(VS_RETURNS,17,10))	
				)
			)
		
		IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE('  L_SAL_FROM_DATE = ' || TO_CHAR(L_SAL_FROM_DATE) || ' , ' || ' L_SAL_BASIS_CODE = ' || L_SAL_BASIS_CODE || ' , ' || ' L_SAL_AMOUNT = ' || TO_CHAR(L_SAL_AMOUNT) ))
	          
/* --------- Fetch values from Salary Table - Ends ----------*/


/* --------- Override calculation fo HOURLY employees - Starts ----------*/

   IF (DATA_ELEMENTS.EXISTS('Working_Hours')) THEN
	(
		S_WORKING_HOURS = DATA_ELEMENTS['Working_Hours']
		L_WORKING_HOURS = TO_NUMBER(S_WORKING_HOURS)
		
			IF L_SAL_BASIS_CODE = 'HOURLY' THEN
			(
			L_SAL_AMOUNT = (L_SAL_AMOUNT * L_WORKING_HOURS * 52)
			)
   )

	L_SAL_AMOUNT = Round(L_SAL_AMOUNT,2)

/* --------- Override calculation fo HOURLY employees - Ends ----------*/

/* --------- Decimal Formating SALARY Starts ----------*/
IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE(' L_SAL_AMOUNT before Formating : '|| TO_CHAR(L_SAL_AMOUNT) ))
DECIMAL_POS = LENGTH(TO_CHAR(L_SAL_AMOUNT))- INSTR(TO_CHAR(L_SAL_AMOUNT),'.')
IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE(' Decimal position from last : '|| TO_CHAR(DECIMAL_POS) ))

	IF INSTR(TO_CHAR(L_SAL_AMOUNT),'.') <> 0 THEN
	(
	IF (LENGTH(TO_CHAR(L_SAL_AMOUNT))- INSTR(TO_CHAR(L_SAL_AMOUNT),'.')) = 1 THEN ( Formatted_L_SAL_AMOUNT = TO_CHAR(L_SAL_AMOUNT) || '0' ) ELSE (Formatted_L_SAL_AMOUNT = TO_CHAR(L_SAL_AMOUNT))         
	)
	ELSE
	(
	Formatted_L_SAL_AMOUNT = TO_CHAR(L_SAL_AMOUNT)|| '00'
	)
	
	IF (TO_CHAR(TRUNC(L_SAL_FROM_DATE),'YYYY/MM/DD') = '1902/01/01') AND L_SAL_AMOUNT = 0 THEN
	( 
	RULE_VALUE = ' '
	)
	ELSE
	(
	RULE_VALUE = (TO_CHAR(L_SAL_FROM_DATE,'YYYYMMDD') || Formatted_L_SAL_AMOUNT )
	)
/* --------- Decimal Formating SALARY Ends ----------*/   
)

ELSE
(

/* --------- Decimal Formating ABBR Starts ----------*/
IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE(' HSA_ABBR_VALUE before Formating : '|| TO_CHAR(HSA_ABBR_VALUE) ))
DECIMAL_POS = LENGTH(TO_CHAR(HSA_ABBR_VALUE))- INSTR(TO_CHAR(HSA_ABBR_VALUE),'.')
IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE(' Decimal position from last : '|| TO_CHAR(DECIMAL_POS) ))

	IF INSTR(TO_CHAR(HSA_ABBR_VALUE),'.') <> 0 THEN
	(
	IF (LENGTH(TO_CHAR(HSA_ABBR_VALUE))- INSTR(TO_CHAR(HSA_ABBR_VALUE),'.')) = 1 THEN ( Formatted_HSA_ABBR_VALUE = TO_CHAR(HSA_ABBR_VALUE) || '0' ) ELSE (Formatted_HSA_ABBR_VALUE = TO_CHAR(HSA_ABBR_VALUE))         
	)
	ELSE
	(
	Formatted_HSA_ABBR_VALUE = TO_CHAR(HSA_ABBR_VALUE)|| '00'
	)

	RULE_VALUE = (TO_CHAR(HSA_ABBR_EFFDT,'YYYYMMDD') || Formatted_HSA_ABBR_VALUE)
)
/* --------- Decimal Formating ABBR Ends ----------*/

IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE(' RULE_VALUE is :'|| RULE_VALUE))
IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE(' AXE_HR_HSA_RULE_FF - Ends '))
IF TRACE_FLAG = 'Y' THEN (RET = ESS_LOG_WRITE(' '))


RETURN RULE_VALUE 

)"
